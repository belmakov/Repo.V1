// <auto-generated />
using System;
using FaciTech.Apartment.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FaciTech.Apartment.Database.Migrations
{
    [DbContext(typeof(FaciTechContext))]
    [Migration("20190527012651_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Amenity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Amenity");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CityId");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("RegionId");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Community", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("AmenityIds");

                    b.Property<string>("AssociationBankAccountNumber");

                    b.Property<string>("AssociationBankBranchAddress");

                    b.Property<string>("AssociationBankIFSC");

                    b.Property<string>("AssociationBankName");

                    b.Property<string>("AssociationName");

                    b.Property<string>("AssociationNumber");

                    b.Property<string>("BuilderName");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Landmark");

                    b.Property<string>("LocationLink");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("SubAreaId");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Community");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.CommunityLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area");

                    b.Property<Guid>("AreaId");

                    b.Property<string>("City");

                    b.Property<Guid>("CityId");

                    b.Property<string>("Community");

                    b.Property<string>("Country");

                    b.Property<Guid>("CountryId");

                    b.Property<string>("SubArea");

                    b.Property<Guid>("SubAreaId");

                    b.HasKey("Id");

                    b.ToTable("CommunityLocation");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("Inactive");

                    b.Property<string>("LastName");

                    b.Property<string>("MobilePhone")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<Guid>("CommunityId");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("NoOfFloors");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.ToTable("Block");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.SubArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AreaId");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("SubArea");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BlockId");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<int>("FloorNumber");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<Guid>("SectionId");

                    b.Property<string>("Specification");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<Guid>("ContactId");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("Inactive");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Section", b =>
                {
                    b.HasOne("FaciTech.Apartment.Database.Models.Community", "Community")
                        .WithMany()
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.Unit", b =>
                {
                    b.HasOne("FaciTech.Apartment.Database.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("BlockId");
                });

            modelBuilder.Entity("FaciTech.Apartment.Database.Models.User", b =>
                {
                    b.HasOne("FaciTech.Apartment.Database.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
