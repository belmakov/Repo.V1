/*
Deployment script for CommunityMgmtDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CommunityMgmtDb"
:setvar DefaultFilePrefix "CommunityMgmtDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Amenity]...';


GO
CREATE TABLE [dbo].[Amenity] (
    [_Id]           UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Created]      DATETIME         NOT NULL,
    [_Updated]      DATETIME         NOT NULL,
    [_UpdatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Active]       BIT              NOT NULL,
    [_Tags]         NVARCHAR (MAX)   NULL,
    [_Comments]     NVARCHAR (MAX)   NULL,
    [Name]          NVARCHAR (100)   NULL,
    [AmenityTypeId] UNIQUEIDENTIFIER NOT NULL,
    [Description]   NVARCHAR (250)   NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[AmenityType]...';


GO
CREATE TABLE [dbo].[AmenityType] (
    [_Id]         UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [_Created]    DATETIME         NOT NULL,
    [_Updated]    DATETIME         NOT NULL,
    [_UpdatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [_Active]     BIT              NOT NULL,
    [_Tags]       NVARCHAR (MAX)   NULL,
    [_Comments]   NVARCHAR (MAX)   NULL,
    [Name]        NVARCHAR (100)   NOT NULL,
    [Code]        NCHAR (25)       NOT NULL,
    [Description] NVARCHAR (250)   NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Area]...';


GO
CREATE TABLE [dbo].[Area] (
    [_Id]          UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Created]     DATETIME         NOT NULL,
    [_Updated]     DATETIME         NOT NULL,
    [_UpdatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Active]      BIT              NOT NULL,
    [_Tags]        NVARCHAR (MAX)   NULL,
    [_Comments]    NVARCHAR (MAX)   NULL,
    [Name]         NVARCHAR (100)   NOT NULL,
    [SupervisorId] UNIQUEIDENTIFIER NOT NULL,
    [CityId]       UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Block]...';


GO
CREATE TABLE [dbo].[Block] (
    [_Id]         UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [_Created]    DATETIME         NOT NULL,
    [_Updated]    DATETIME         NOT NULL,
    [_UpdatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [_Active]     BIT              NOT NULL,
    [_Tags]       NVARCHAR (MAX)   NULL,
    [_Comments]   NVARCHAR (MAX)   NULL,
    [CommunityId] UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (100)   NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [_Id]           UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Created]      DATETIME         NOT NULL,
    [_Updated]      DATETIME         NOT NULL,
    [_UpdatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Active]       BIT              NOT NULL,
    [_Tags]         NVARCHAR (MAX)   NULL,
    [_Comments]     NVARCHAR (MAX)   NULL,
    [Name]          NVARCHAR (100)   NOT NULL,
    [Code]          NVARCHAR (10)    NULL,
    [TelephoneCode] INT              NULL,
    [Timezone]      NVARCHAR (100)   NOT NULL,
    [RegionId]      UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Community]...';


GO
CREATE TABLE [dbo].[Community] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [Name]       NCHAR (100)      NOT NULL,
    [LocationId] UNIQUEIDENTIFIER NOT NULL,
    [SubAreaId]  UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Contact]...';


GO
CREATE TABLE [dbo].[Contact] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [FirstName]  NVARCHAR (100)   NOT NULL,
    [MiddleName] NVARCHAR (100)   NULL,
    [LastName]   NVARCHAR (100)   NOT NULL,
    [Title]      NVARCHAR (15)    NOT NULL,
    [LocationId] UNIQUEIDENTIFIER NOT NULL,
    [ImageId]    UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [_Id]           UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Created]      DATETIME         NOT NULL,
    [_Updated]      DATETIME         NOT NULL,
    [_UpdatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Active]       BIT              NOT NULL,
    [_Tags]         NVARCHAR (MAX)   NULL,
    [_Comments]     NVARCHAR (MAX)   NULL,
    [Name]          NVARCHAR (100)   NOT NULL,
    [Code]          NCHAR (10)       NULL,
    [CurrencyCode]  NCHAR (10)       NULL,
    [Timezone]      NVARCHAR (100)   NULL,
    [TelephoneCode] INT              NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Image]...';


GO
CREATE TABLE [dbo].[Image] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [Image]      IMAGE            NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Location]...';


GO
CREATE TABLE [dbo].[Location] (
    [_Id]           UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Created]      DATETIME         NOT NULL,
    [_Updated]      DATETIME         NOT NULL,
    [_UpdatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [_Active]       BIT              NOT NULL,
    [_Tags]         NVARCHAR (MAX)   NULL,
    [_Comments]     NVARCHAR (MAX)   NULL,
    [AddressLine1]  NVARCHAR (200)   NOT NULL,
    [AddressLine2]  NVARCHAR (200)   NULL,
    [LocalityName]  NVARCHAR (200)   NULL,
    [Landmarks]     NVARCHAR (200)   NULL,
    [PinCode]       NVARCHAR (20)    NOT NULL,
    [MapCordinates] NVARCHAR (50)    NULL,
    [CountryId]     UNIQUEIDENTIFIER NOT NULL,
    [RegionId]      UNIQUEIDENTIFIER NOT NULL,
    [CityId]        UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Region]...';


GO
CREATE TABLE [dbo].[Region] (
    [_Id]          UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Created]     DATETIME         NOT NULL,
    [_Updated]     DATETIME         NOT NULL,
    [_UpdatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Active]      BIT              NOT NULL,
    [_Tags]        NVARCHAR (MAX)   NULL,
    [_Comments]    NVARCHAR (MAX)   NULL,
    [Name]         NVARCHAR (100)   NOT NULL,
    [Code]         NCHAR (10)       NULL,
    [Timezone]     NVARCHAR (100)   NULL,
    [RegionTypeId] UNIQUEIDENTIFIER NOT NULL,
    [CountryId]    UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[RegionType]...';


GO
CREATE TABLE [dbo].[RegionType] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [Name]       NCHAR (10)       NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[SubArea]...';


GO
CREATE TABLE [dbo].[SubArea] (
    [_Id]          UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Created]     DATETIME         NOT NULL,
    [_Updated]     DATETIME         NOT NULL,
    [_UpdatedBy]   UNIQUEIDENTIFIER NOT NULL,
    [_Active]      BIT              NOT NULL,
    [_Tags]        NVARCHAR (MAX)   NULL,
    [_Comments]    NVARCHAR (MAX)   NULL,
    [AreaId]       UNIQUEIDENTIFIER NOT NULL,
    [SupervisorId] UNIQUEIDENTIFIER NOT NULL,
    [Name]         NVARCHAR (100)   NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Tenant]...';


GO
CREATE TABLE [dbo].[Tenant] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [Primary]    BIT              NOT NULL,
    [ContactId]  UNIQUEIDENTIFIER NOT NULL,
    [UnitId]     UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[TenantAmenityEntitlement]...';


GO
CREATE TABLE [dbo].[TenantAmenityEntitlement] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [TenantId]   UNIQUEIDENTIFIER NOT NULL,
    [AmenityId]  UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[Unit]...';


GO
CREATE TABLE [dbo].[Unit] (
    [_Id]                 UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy]          UNIQUEIDENTIFIER NOT NULL,
    [_Created]            DATETIME         NOT NULL,
    [_Updated]            DATETIME         NOT NULL,
    [_UpdatedBy]          UNIQUEIDENTIFIER NOT NULL,
    [_Active]             BIT              NOT NULL,
    [_Tags]               NVARCHAR (MAX)   NULL,
    [_Comments]           NVARCHAR (MAX)   NULL,
    [Identifier]          NVARCHAR (50)    NOT NULL,
    [BlockId]             UNIQUEIDENTIFIER NOT NULL,
    [OwnerId]             UNIQUEIDENTIFIER NOT NULL,
    [MaintainenceFeePaid] BIT              NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [_Id]        UNIQUEIDENTIFIER NOT NULL,
    [_CreatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Created]   DATETIME         NOT NULL,
    [_Updated]   DATETIME         NOT NULL,
    [_UpdatedBy] UNIQUEIDENTIFIER NOT NULL,
    [_Active]    BIT              NOT NULL,
    [_Tags]      NVARCHAR (MAX)   NULL,
    [_Comments]  NVARCHAR (MAX)   NULL,
    [UserName]   NVARCHAR (100)   NOT NULL,
    [ContactId]  UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([_Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Amenity_ToAmenityType]...';


GO
ALTER TABLE [dbo].[Amenity]
    ADD CONSTRAINT [FK_Amenity_ToAmenityType] FOREIGN KEY ([AmenityTypeId]) REFERENCES [dbo].[AmenityType] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Amenity_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Amenity]
    ADD CONSTRAINT [FK_Amenity_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Amenity_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Amenity]
    ADD CONSTRAINT [FK_Amenity_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_AmenityType_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[AmenityType]
    ADD CONSTRAINT [FK_AmenityType_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_AmenityType_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[AmenityType]
    ADD CONSTRAINT [FK_AmenityType_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Area_ToSupervisor]...';


GO
ALTER TABLE [dbo].[Area]
    ADD CONSTRAINT [FK_Area_ToSupervisor] FOREIGN KEY ([SupervisorId]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Area_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Area]
    ADD CONSTRAINT [FK_Area_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Area_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Area]
    ADD CONSTRAINT [FK_Area_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Area_ToCity]...';


GO
ALTER TABLE [dbo].[Area]
    ADD CONSTRAINT [FK_Area_ToCity] FOREIGN KEY ([CityId]) REFERENCES [dbo].[City] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Block_ToCommunity]...';


GO
ALTER TABLE [dbo].[Block]
    ADD CONSTRAINT [FK_Block_ToCommunity] FOREIGN KEY ([CommunityId]) REFERENCES [dbo].[Community] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Block_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Block]
    ADD CONSTRAINT [FK_Block_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Block_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Block]
    ADD CONSTRAINT [FK_Block_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_City_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [FK_City_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_City_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [FK_City_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_City_ToRegion]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [FK_City_ToRegion] FOREIGN KEY ([RegionId]) REFERENCES [dbo].[Region] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Community_ToLocation]...';


GO
ALTER TABLE [dbo].[Community]
    ADD CONSTRAINT [FK_Community_ToLocation] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[Location] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Community_ToSubArea]...';


GO
ALTER TABLE [dbo].[Community]
    ADD CONSTRAINT [FK_Community_ToSubArea] FOREIGN KEY ([SubAreaId]) REFERENCES [dbo].[SubArea] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Community_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Community]
    ADD CONSTRAINT [FK_Community_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Community_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Community]
    ADD CONSTRAINT [FK_Community_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Contact_ToLocation]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD CONSTRAINT [FK_Contact_ToLocation] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[Location] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Contact_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD CONSTRAINT [FK_Contact_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Contact_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD CONSTRAINT [FK_Contact_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Contact_ToImage]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD CONSTRAINT [FK_Contact_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [dbo].[Image] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Country_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Country]
    ADD CONSTRAINT [FK_Country_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Country_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Country]
    ADD CONSTRAINT [FK_Country_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Location_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Location_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Location_ToCity]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToCity] FOREIGN KEY ([CityId]) REFERENCES [dbo].[City] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Location_ToRegion]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToRegion] FOREIGN KEY ([RegionId]) REFERENCES [dbo].[Region] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Location_ToCountry]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToCountry] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[Country] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Regions_ToRegionType]...';


GO
ALTER TABLE [dbo].[Region]
    ADD CONSTRAINT [FK_Regions_ToRegionType] FOREIGN KEY ([RegionTypeId]) REFERENCES [dbo].[RegionType] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Regions_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Region]
    ADD CONSTRAINT [FK_Regions_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Regions_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Region]
    ADD CONSTRAINT [FK_Regions_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Regions_ToCountry]...';


GO
ALTER TABLE [dbo].[Region]
    ADD CONSTRAINT [FK_Regions_ToCountry] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[Country] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_RegionType_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[RegionType]
    ADD CONSTRAINT [FK_RegionType_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_RegionType_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[RegionType]
    ADD CONSTRAINT [FK_RegionType_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_SubArea_ToArea]...';


GO
ALTER TABLE [dbo].[SubArea]
    ADD CONSTRAINT [FK_SubArea_ToArea] FOREIGN KEY ([AreaId]) REFERENCES [dbo].[Area] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_SubArea_ToSupervisor]...';


GO
ALTER TABLE [dbo].[SubArea]
    ADD CONSTRAINT [FK_SubArea_ToSupervisor] FOREIGN KEY ([SupervisorId]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_SubArea_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[SubArea]
    ADD CONSTRAINT [FK_SubArea_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_SubArea_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[SubArea]
    ADD CONSTRAINT [FK_SubArea_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Tenant_ToContact]...';


GO
ALTER TABLE [dbo].[Tenant]
    ADD CONSTRAINT [FK_Tenant_ToContact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Tenant_ToUnit]...';


GO
ALTER TABLE [dbo].[Tenant]
    ADD CONSTRAINT [FK_Tenant_ToUnit] FOREIGN KEY ([UnitId]) REFERENCES [dbo].[Unit] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Tenant_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Tenant]
    ADD CONSTRAINT [FK_Tenant_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Tenant_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Tenant]
    ADD CONSTRAINT [FK_Tenant_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_TenantAmenityEntitlement_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[TenantAmenityEntitlement]
    ADD CONSTRAINT [FK_TenantAmenityEntitlement_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_TenantAmenityEntitlement_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[TenantAmenityEntitlement]
    ADD CONSTRAINT [FK_TenantAmenityEntitlement_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_TenantAmenityEntitlement_ToTenant]...';


GO
ALTER TABLE [dbo].[TenantAmenityEntitlement]
    ADD CONSTRAINT [FK_TenantAmenityEntitlement_ToTenant] FOREIGN KEY ([TenantId]) REFERENCES [dbo].[Tenant] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_TenantAmenityEntitlement_ToAmenity]...';


GO
ALTER TABLE [dbo].[TenantAmenityEntitlement]
    ADD CONSTRAINT [FK_TenantAmenityEntitlement_ToAmenity] FOREIGN KEY ([AmenityId]) REFERENCES [dbo].[Amenity] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Unit_ToBlock]...';


GO
ALTER TABLE [dbo].[Unit]
    ADD CONSTRAINT [FK_Unit_ToBlock] FOREIGN KEY ([BlockId]) REFERENCES [dbo].[Block] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Unit_ToOwner]...';


GO
ALTER TABLE [dbo].[Unit]
    ADD CONSTRAINT [FK_Unit_ToOwner] FOREIGN KEY ([OwnerId]) REFERENCES [dbo].[Contact] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Unit_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[Unit]
    ADD CONSTRAINT [FK_Unit_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_Unit_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[Unit]
    ADD CONSTRAINT [FK_Unit_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_User_ToCreatedBy]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_ToCreatedBy] FOREIGN KEY ([_CreatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_User_ToUpdatedBy]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_ToUpdatedBy] FOREIGN KEY ([_UpdatedBy]) REFERENCES [dbo].[User] ([_Id]);


GO
PRINT N'Creating [dbo].[FK_User_ToContact]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_ToContact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([_Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eae33efa-af93-4de9-8658-7ee6b9b1e821')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eae33efa-af93-4de9-8658-7ee6b9b1e821')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '36f27e63-bc77-4f3c-a27a-ee753786f6a6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('36f27e63-bc77-4f3c-a27a-ee753786f6a6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aea0f650-a04c-4f58-b888-b6e4dd91b1b0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aea0f650-a04c-4f58-b888-b6e4dd91b1b0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a65f21b4-8de9-4da6-8c41-f5017054b42d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a65f21b4-8de9-4da6-8c41-f5017054b42d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c9b32324-437d-4ee1-81a9-c9ddd0aa34c0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c9b32324-437d-4ee1-81a9-c9ddd0aa34c0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '70c654c7-ce36-4a73-aa2d-71a57fdbf1a6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('70c654c7-ce36-4a73-aa2d-71a57fdbf1a6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b701e764-4394-4d01-a221-89af4a98b2b1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b701e764-4394-4d01-a221-89af4a98b2b1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '95bea2d8-0a25-4c2e-9d67-b8343ab17e68')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('95bea2d8-0a25-4c2e-9d67-b8343ab17e68')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3aba4c37-bfe5-4590-8770-f11615572d36')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3aba4c37-bfe5-4590-8770-f11615572d36')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f9e2067c-d286-4fd4-8ddb-315d50f5a6a4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f9e2067c-d286-4fd4-8ddb-315d50f5a6a4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ae446b0-a3b6-4036-9ec4-0808cf3f6b75')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ae446b0-a3b6-4036-9ec4-0808cf3f6b75')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd6c9aee6-5d23-40c7-bb3e-8637cb0883d9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d6c9aee6-5d23-40c7-bb3e-8637cb0883d9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ed0e3033-86b0-4362-a11c-9b1cf1a5490b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ed0e3033-86b0-4362-a11c-9b1cf1a5490b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3b70f550-738a-454b-9fe2-162b93d7bf3d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3b70f550-738a-454b-9fe2-162b93d7bf3d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e313f269-a226-4ae4-9ce8-f59984eae9fb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e313f269-a226-4ae4-9ce8-f59984eae9fb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '740a24d1-2507-4ade-ba0a-601375a57924')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('740a24d1-2507-4ade-ba0a-601375a57924')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
